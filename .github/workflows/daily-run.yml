name: Daily Content Generation

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 0 点执行
  workflow_dispatch:     # 允许手动触发

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: write # 允许 GITHUB_TOKEN 对仓库进行写操作
      
    steps:
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - name: Checkout Source Repo (This Repo)
        uses: actions/checkout@v4
        with:
          # 我们需要获取子模块（如果你的主题是子模块）
          submodules: recursive

      - name: Checkout Public Repo into ./public
        uses: actions/checkout@v4
        with:
          # 使用你已有的 secret
          repository: ${{ secrets.PAGES_REPO_URL }}
          ref: ${{ secrets.PAGES_BRANCH }}
          # 检出到 public 子目录
          path: public
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies and Run Scripts
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_API_BASE: ${{ secrets.OPENAI_API_BASE }}
          SEATABLE_API_TOKEN: ${{ secrets.SEATABLE_API_TOKEN }}
          SEATABLE_SERVER_URL: ${{ secrets.SEATABLE_SERVER_URL }}
          # 关键: 告诉脚本, Hugo 的源目录就是工作区的根目录
          HUGO_PROJECT_PATH: ${{ github.workspace }}
          # 传递 Git 用户信息
          GIT_COMMIT_EMAIL: "github-actions[bot]@users.noreply.github.com"
          GIT_COMMIT_NAME: "github-actions[bot]"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
          PAGES_REPO_URL: ${{ secrets.PAGES_REPO_URL }}
          PAGES_BRANCH: ${{ secrets.PAGES_BRANCH }}
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          python -m playwright install --with-deps
          python run_all_daily.py
